// Word filtering configuration for the word processor
// This file centralizes all stop words, tech abbreviations, and web artifacts
// to make the word processor more maintainable and optimize the dev flow

// Global stop words - words to filter out from all sources
export const STOP_WORDS = new Set([
  // Common English stop words
  "the",
  "a",
  "an",
  "and",
  "or",
  "but",
  "in",
  "on",
  "at",
  "to",
  "for",
  "of",
  "with",
  "by",
  "from",
  "up",
  "about",
  "into",
  "through",
  "during",
  "before",
  "after",
  "above",
  "below",
  "between",
  "among",
  "is",
  "are",
  "was",
  "were",
  "be",
  "been",
  "being",
  "have",
  "has",
  "had",
  "do",
  "does",
  "did",
  "will",
  "would",
  "could",
  "should",
  "may",
  "might",
  "must",
  "can",
  "this",
  "that",
  "these",
  "those",
  "i",
  "you",
  "he",
  "she",
  "it",
  "we",
  "they",
  "me",
  "him",
  "her",
  "us",
  "them",
  "my",
  "your",
  "his",
  "her",
  "its",
  "our",
  "their",
  "what",
  "which",
  "who",
  "when",
  "where",
  "why",
  "how",
  "all",
  "any",
  "both",
  "each",
  "few",
  "more",
  "most",
  "other",
  "some",
  "such",
  "no",
  "nor",
  "not",
  "only",
  "own",
  "same",
  "so",
  "than",
  "too",
  "very",
  "just",
  "now",
  "here",
  "there",
  "then",
  "once",

  // HTML attributes and common web terms
  "href",
  "src",
  "alt",
  "title",
  "class",
  "id",
  "style",
  "data",
  "aria",
  "role",
  "name",
  "value",
  "placeholder",
  "required",
  "readonly",
  "disabled",
  "checked",
  "type",
  "method",
  "action",
  "target",
  "rel",
  "content",
  "charset",
  "lang",
  "width",
  "height",
  "border",
  "cellpadding",
  "cellspacing",
  "colspan",
  "rowspan",

  // HTML tags (without brackets)
  "div",
  "span",
  "img",
  "link",
  "meta",
  "script",
  "style",
  "head",
  "body",
  "html",
  "table",
  "thead",
  "tbody",
  "tfoot",
  "tr",
  "td",
  "th",
  "ul",
  "ol",
  "li",
  "form",
  "input",
  "button",
  "select",
  "option",
  "textarea",
  "label",
  "fieldset",
  "nav",
  "header",
  "footer",
  "main",
  "section",
  "article",
  "aside",
  "figure",
  "figcaption",
  "details",
  "summary",
  "dialog",
  "canvas",
  "svg",
  "video",
  "audio",

  // CSS and styling terms
  "css",
  "px",
  "em",
  "rem",
  "vh",
  "vw",
  "rgb",
  "rgba",
  "hex",
  "color",
  "background",
  "margin",
  "padding",
  "border",
  "font",
  "text",
  "display",
  "position",
  "float",
  "clear",
  "overflow",
  "visibility",
  "opacity",
  "transform",
  "transition",

  // JavaScript and programming terms
  "var",
  "let",
  "const",
  "function",
  "return",
  "if",
  "else",
  "for",
  "while",
  "switch",
  "case",
  "break",
  "continue",
  "try",
  "catch",
  "finally",
  "throw",
  "true",
  "false",
  "null",
  "undefined",
  "typeof",
  "instanceof",
  "new",
  "delete",

  // Web protocols and formats
  "http",
  "https",
  "ftp",
  "mailto",
  "tel",
  "sms",
  "www",
  "com",
  "org",
  "net",
  "html",
  "xml",
  "json",
  "csv",
  "pdf",
  "jpg",
  "jpeg",
  "png",
  "gif",
  "svg",
  "mp3",
  "mp4",
  "avi",
  "mov",
  "zip",
  "rar",
  "tar",
  "gz",

  // Common web interface terms
  "click",
  "submit",
  "reset",
  "cancel",
  "ok",
  "yes",
  "no",
  "save",
  "delete",
  "edit",
  "view",
  "show",
  "hide",
  "open",
  "close",
  "next",
  "prev",
  "previous",
  "first",
  "last",
  "home",
  "back",
  "forward",
  "refresh",
  "reload",
  "search",
  "filter",
  "sort",
  "login",
  "logout",
  "signin",
  "signup",
  "register",

  // URL and path components
  "index",
  "default",
  "main",
  "page",
  "site",
  "web",
  "blog",
  "post",
  "article",
  "category",
  "tag",
  "archive",
  "feed",
  "rss",
  "atom",
  "sitemap",
  "robots",

  // Common filler and connector words in web content
  "read",
  "more",
  "less",
  "full",
  "complete",
  "entire",
  "whole",
  "total",
  "get",
  "set",
  "add",
  "remove",
  "update",
  "create",
  "make",
  "build",
  "use",
  "see",
  "find",
  "look",
  "check",
  "try",
  "test",
  "run",
  "start",
  "stop",
  "end",

  // Time and date related (often appear in timestamps)
  "am",
  "pm",
  "jan",
  "feb",
  "mar",
  "apr",
  "may",
  "jun",
  "jul",
  "aug",
  "sep",
  "oct",
  "nov",
  "dec",
  "mon",
  "tue",
  "wed",
  "thu",
  "fri",
  "sat",
  "sun",
  "today",
  "yesterday",
  "tomorrow",
  "week",
  "month",
  "year",
  "day",
  "time",

  // Numbers and measurements (common in web content)
  "one",
  "two",
  "three",
  "four",
  "five",
  "six",
  "seven",
  "eight",
  "nine",
  "ten",
  "first",
  "second",
  "third",
  "fourth",
  "fifth",
  "last",
  "next",
  "previous",

  // Social media and sharing terms
  "share",
  "like",
  "follow",
  "subscribe",
  "comment",
  "reply",
  "retweet",
  "post",
  "tweet",
  "status",
  "update",
  "message",
  "chat",
  "email",
  "contact",
  "about",

  // Generic web content words
  "content",
  "text",
  "image",
  "photo",
  "picture",
  "video",
  "audio",
  "file",
  "download",
  "upload",
  "attach",
  "embed",
  "include",
  "insert",
  "paste",
  "copy",
  "cut",
  "select",
  "highlight",
  "mark",
  "tag",
  "label",
  "note",

  // Additional common words that add noise
  "new",
  "out",
  "people",
  "like",
  "year",
  "years",
  "says",
  "said",
  "say",
  "down",
  "many",
  "off",
  "made",
  "make",
  "take",
  "best",
  "news",
  "report",
  "reports",
  "reported",
  "according",
  "sources",
  "officials",
  "continue",
  "reading",
  "learn",
  "strong",
]);

// Source-specific stopwords - words to filter out only when processing content from that specific source
export const SOURCE_SPECIFIC_STOPWORDS: Record<string, Set<string>> = {
  TechCrunch: new Set(["techcrunch", "crunchbase", "disrupt"]),
  "Hacker News": new Set(["hackernews", "ycombinator", "combinator"]),
  "BBC News": new Set(["bbc", "british", "broadcasting", "corporation"]),
  Wired: new Set(["wired", "conde", "nast"]),
  CNN: new Set(["cnn", "cable", "news", "network"]),
  "CNN Top Stories": new Set(["cnn", "cable", "news", "network"]),
  "CNN World": new Set(["cnn", "cable", "news", "network"]),
  "O'Reilly Radar": new Set(["oreilly", "radar", "media"]),
  "The Guardian UK": new Set(["guardian", "theguardian"]),
  "The Guardian World": new Set(["guardian", "theguardian"]),
  "The Guardian US": new Set(["guardian", "theguardian"]),
  "NPR Main News": new Set(["npr", "national", "public", "radio"]),
  "Reddit r/all": new Set(["reddit", "subreddit"]),
  "Reddit r/popular": new Set(["reddit", "subreddit"]),
  "Reddit r/worldnews": new Set(["reddit", "subreddit", "worldnews"]),
  "Reddit Tech Combined": new Set([
    "reddit",
    "subreddit",
    "technology",
    "science",
    "programming",
  ]),
  // API Manager sources
  YouTube: new Set(["youtube", "google"]),
  NewsAPI: new Set(["newsapi"]),
  Reddit: new Set(["reddit", "subreddit"]),
  Twitter: new Set(["twitter", "tweet", "retweet"]),
};

// Tech abbreviations and acronyms that should be allowed even if they're only 2 characters
export const TECH_ABBREVIATIONS = new Set([
  "ai",
  "ml",
  "ar",
  "vr",
  "ux",
  "ui",
  "api",
  "sdk",
  "cpu",
  "gpu",
  "ram",
  "ssd",
  "hdd",
  "usb",
  "wifi",
  "iot",
  "saas",
  "paas",
  "iaas",
  "ceo",
  "cto",
  "cfo",
]);

// Web artifacts and technical terms that should be filtered out
export const WEB_ARTIFACTS = new Set([
  "amp",
  "cdn",
  "css",
  "dom",
  "gif",
  "jpg",
  "png",
  "svg",
  "pdf",
  "xml",
  "rss",
  "url",
  "uri",
  "utm",
  "seo",
  "cms",
]);

// Web content patterns to remove during text cleaning
export const WEB_CONTENT_PATTERNS = [
  // Common web artifacts and UI text
  /\b(continue\s+reading|read\s+more|click\s+here|learn\s+more|view\s+full|full\s+article)\b/gi,
  // Social media artifacts
  /\b(submitted\s+by|posted\s+by|comments?|upvotes?|downvotes?)\b/gi,
  // Reddit-specific artifacts
  /\b(r\/[a-zA-Z0-9_]+|u\/[a-zA-Z0-9_]+)\b/g,
  /\b\d+\s+(points?|karma|upvotes?)\b/gi,
  // Common Reddit/forum artifacts
  /\b(edit|update|tldr|tl;dr|imo|imho|fyi|btw|afaik|iirc)\b/gi,
];

// File extensions to remove
export const FILE_EXTENSIONS = [
  "jpg",
  "jpeg",
  "png",
  "gif",
  "pdf",
  "doc",
  "docx",
  "xls",
  "xlsx",
  "ppt",
  "pptx",
  "zip",
  "rar",
  "tar",
  "gz",
];

// Time and date patterns to remove
export const TIME_DATE_PATTERNS = [
  /\b\d{1,2}:\d{2}(\s*(am|pm))?\b/gi,
  /\b\d{1,2}\/\d{1,2}\/\d{2,4}\b/g,
  /\b(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\s+\d{1,2},?\s+\d{2,4}\b/gi,
];

// Number patterns with units to remove
export const NUMBER_UNIT_PATTERNS = [
  /\b\d+\s*(k|m|b|kb|mb|gb|tb|%|percent)\b/gi,
];

// URL patterns to remove
export const URL_PATTERNS = [
  /https?:\/\/[^\s]+/g,
  /www\.[^\s]+/g,
  /[a-zA-Z0-9.-]+\.(com|org|net|edu|gov|co\.uk|io|ly|me|tv)[^\s]*/g,
];

// Social media patterns to remove
export const SOCIAL_MEDIA_PATTERNS = [/@[a-zA-Z0-9_]+/g, /#[a-zA-Z0-9_]+/g];

// File path patterns to remove
export const FILE_PATH_PATTERNS = [
  new RegExp(`\\b[a-zA-Z0-9_-]+\\.(${FILE_EXTENSIONS.join("|")})\\b`, "gi"),
];

// Helper function to get source-specific stop words
export function getSourceStopWords(source: string): Set<string> {
  return SOURCE_SPECIFIC_STOPWORDS[source] || new Set();
}

// Helper function to check if a word is a tech abbreviation
export function isTechAbbreviation(word: string): boolean {
  return TECH_ABBREVIATIONS.has(word.toLowerCase());
}

// Helper function to check if a word is a web artifact
export function isWebArtifact(word: string): boolean {
  return WEB_ARTIFACTS.has(word.toLowerCase());
}

// Helper function to check if a word is a stop word
export function isStopWord(word: string): boolean {
  return STOP_WORDS.has(word.toLowerCase());
}
